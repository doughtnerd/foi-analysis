defn binaryToDecimalConverter(binaryDigits) {
  def < :decimal >: (| ~fold
    binaryDigits,
    < decimal: 0, idx: 0 >,
    (< :decimal, :idx >, digit) {
      def power: size(binaryDigits) - idx - 1;
      decimal := decimal + (digit * pow(2, power));
      < :decimal, idx: |+ idx,1| >;
    }
  );
  ^decimal;
}

defn binaryToDecimalConverter2(binaryDigits) {
  def < x, ..xs >: binaryDigits;
  ?[x ?= ''] 0;
  ^convertBToI(x, xs.length) + binaryToDecimalConverter2(xs);
}

defn convertBToI(digit, idx) {
  ?(x){ 
    ?[?= '0']: 0;
    ?[?= '1']: pow(2, idx);
    ?: throw "Input is not binary";
  };
}